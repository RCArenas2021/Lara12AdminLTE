# ========================================
# ARCHIVO DE CONFIGURACIÓN DE ENTORNO - EJEMPLO
# ========================================
# Proyecto: Lara12AdminLTE
# Framework: Laravel 12.x
# Descripción: Plantilla de configuración para variables de entorno
# 
# IMPORTANTE: Este archivo NO contiene datos sensibles y debe ser
# versionado en Git. Para uso real, copiar a .env y configurar valores.
#
# ========================================
# HISTORIAL DE CAMBIOS
# ========================================
# v1.0.0 - 26/07/2025 - RCArenas2021
#   - Creación inicial del archivo
#   - Configuración base para Laravel 12
#   - Adaptación para proyecto AdminLTE
#   - Documentación completa en español
#
# v1.1.0 - 26/07/2025 - RCArenas2021
#   - Cambio de base de datos de SQLite a MySQL
#   - Actualización de URL a dominio .test para desarrollo
#   - Configuración específica para entorno Laragon
#
# v1.2.0 - [FECHA] - [AUTOR]
#   - [Descripción de cambios]
#
# ========================================
# DOCUMENTACIÓN DEL ARCHIVO
# ========================================
# Creado por: RCArenas2021
# Fecha creación: 26/07/2025
# Última edición: 26/07/2025
# Editado por: RCArenas2021
# Versión: 1.1.0
# Estado: Activo
# 
# Propósito: Definir todas las variables de entorno necesarias
# para el funcionamiento correcto de la aplicación Lara12AdminLTE
#
# Instrucciones de uso:
# 1. Copiar este archivo como .env
# 2. Configurar valores específicos del entorno
# 3. Nunca versionar el archivo .env en Git
# 4. Actualizar esta plantilla cuando se añadan nuevas variables
# ========================================

# ========================================
# CONFIGURACIÓN GENERAL DE LA APLICACIÓN
# ========================================

# Nombre de la aplicación (aparece en títulos, emails, notificaciones)
# Ejemplo: "Mi Sistema de Gestión", "Portal Corporativo"
APP_NAME=Lara12AdminLTE

# Entorno de trabajo
# Valores permitidos: local, staging, production
# - local: Desarrollo en máquina local
# - staging: Servidor de pruebas
# - production: Servidor de producción
APP_ENV=local

# Clave de cifrado de la aplicación
# GENERAR CON: php artisan key:generate
# IMPORTANTE: Cambiar en cada instalación nueva
APP_KEY=

# Modo de depuración
# true: Muestra errores detallados (solo para desarrollo)
# false: Muestra páginas de error genéricas (producción)
APP_DEBUG=true

# URL base de la aplicación
# Desarrollo con Laragon: http://Lara12AdminLTE.test
# Desarrollo local: http://localhost:8000
# Producción: https://miapp.com, https://app.midominio.es
APP_URL=http://Lara12AdminLTE.test

# ========================================
# CONFIGURACIÓN DE IDIOMA Y LOCALIZACIÓN
# ========================================

# Idioma principal de la aplicación
# Códigos ISO 639-1: es, en, fr, de, it, pt, etc.
APP_LOCALE=es

# Idioma de respaldo si no existe traducción
APP_FALLBACK_LOCALE=es

# Configuración regional para datos ficticios (Faker)
# Formatos: es_ES, en_US, fr_FR, de_DE, etc.
APP_FAKER_LOCALE=es_ES

# ========================================
# CONFIGURACIÓN DE MANTENIMIENTO
# ========================================

# Driver para modo mantenimiento
# file: Almacena estado en archivo
# database: Almacena estado en base de datos
APP_MAINTENANCE_DRIVER=file

# Almacén para modo mantenimiento (si se usa database)
# APP_MAINTENANCE_STORE=database

# ========================================
# CONFIGURACIÓN DEL SERVIDOR PHP
# ========================================

# Número de workers para servidor de desarrollo
# Rango recomendado: 1-8 (depende del hardware)
PHP_CLI_SERVER_WORKERS=4

# Rondas de encriptación para contraseñas con Bcrypt
# Rango: 10-15 (mayor = más seguro pero más lento)
# 10=rápido, 12=equilibrado, 15=muy seguro
BCRYPT_ROUNDS=12

# ========================================
# CONFIGURACIÓN DE LOGS Y DEPURACIÓN
# ========================================

# Canal principal de logs
# Valores: stack, single, daily, slack, syslog, errorlog
LOG_CHANNEL=stack

# Canales apilados para LOG_CHANNEL=stack
# Separados por comas: single,daily,slack
LOG_STACK=single

# Canal para logs de funciones obsoletas
# null: Desactiva estos logs
LOG_DEPRECATIONS_CHANNEL=null

# Nivel mínimo de logs a registrar
# emergency, alert, critical, error, warning, notice, info, debug
LOG_LEVEL=debug

# ========================================
# CONFIGURACIÓN DE BASE DE DATOS
# ========================================

# Tipo de gestor de base de datos
# Opciones: mysql, pgsql, sqlite, sqlsrv (SQL Server)
# Configurado para MySQL con Laragon
DB_CONNECTION=mysql

# Para MySQL/PostgreSQL/SQL Server:
# Dirección del servidor de base de datos
# Laragon: 127.0.0.1 o localhost
DB_HOST=127.0.0.1

# Puerto del servidor de base de datos
# MySQL: 3306, PostgreSQL: 5432, SQL Server: 1433
DB_PORT=3306

# Nombre de la base de datos
# Debe crearse previamente en MySQL
DB_DATABASE=lara12adminlte

# Usuario de la base de datos
# Laragon por defecto: root
DB_USERNAME=root

# Contraseña del usuario de la base de datos
# Laragon por defecto: vacía
DB_PASSWORD=

# ========================================
# CONFIGURACIÓN DE SESIONES DE USUARIO
# ========================================

# Dónde almacenar las sesiones
# file: Archivos en storage/framework/sessions
# cookie: En cookies del navegador
# database: En tabla sessions de la BD
# apc, memcached, redis: En caché de memoria
SESSION_DRIVER=database

# Duración máxima de sesión en minutos
# 120 = 2 horas, 1440 = 24 horas, 10080 = 7 días
SESSION_LIFETIME=120

# Encriptar datos de sesión (recomendado: false por rendimiento)
SESSION_ENCRYPT=false

# Ruta base para las cookies de sesión
SESSION_PATH=/

# Dominio válido para cookies (null = dominio actual)
# Ejemplo: .midominio.com (para subdominios)
SESSION_DOMAIN=null

# ========================================
# CONFIGURACIÓN DE BROADCASTING Y COLAS
# ========================================

# Driver para broadcasting en tiempo real
# log: Solo registra en logs
# pusher: Pusher.com
# ably: Ably.com
# redis: Redis Pub/Sub
BROADCAST_CONNECTION=log

# Sistema de archivos por defecto
# local: storage/app
# public: storage/app/public (accesible vía web)
# s3: Amazon S3
FILESYSTEM_DISK=local

# Driver para colas de trabajo en segundo plano
# sync: Ejecuta inmediatamente (desarrollo)
# database: Almacena en BD (recomendado)
# beanstalkd, sqs, redis: Sistemas especializados
QUEUE_CONNECTION=database

# ========================================
# CONFIGURACIÓN DE SISTEMA DE CACHÉ
# ========================================

# Dónde almacenar datos de caché
# array: Solo en memoria (solo testing)
# file: Archivos en storage/framework/cache
# database: Tabla cache en BD
# memcached, redis: Sistemas de caché avanzados
CACHE_STORE=database

# Prefijo para todas las claves de caché
# Útil para múltiples aplicaciones en mismo servidor
# CACHE_PREFIX=lara12_

# ========================================
# CONFIGURACIÓN DE MEMCACHED
# ========================================

# Servidor Memcached (si se usa CACHE_STORE=memcached)
MEMCACHED_HOST=127.0.0.1

# ========================================
# CONFIGURACIÓN DE REDIS
# ========================================

# Cliente Redis a utilizar
# phpredis: Extensión PHP (más rápida)
# predis: Librería PHP pura
REDIS_CLIENT=phpredis

# Servidor Redis
REDIS_HOST=127.0.0.1

# Contraseña de Redis (dejar null si no tiene)
REDIS_PASSWORD=null

# Puerto de Redis (por defecto 6379)
REDIS_PORT=6379

# ========================================
# CONFIGURACIÓN DE CORREO ELECTRÓNICO
# ========================================

# Driver de envío de correos
# smtp: Servidor SMTP estándar
# sendmail: Sendmail del servidor
# mailgun: Servicio Mailgun
# ses: Amazon SES
# postmark: Servicio Postmark
# log: Solo registra en logs (desarrollo)
# array: Almacena en array (testing)
MAIL_MAILER=log

# Esquema de conexión (normalmente null)
MAIL_SCHEME=null

# Servidor SMTP
# Gmail: smtp.gmail.com
# Outlook: smtp-mail.outlook.com
# SendGrid: smtp.sendgrid.net
MAIL_HOST=127.0.0.1

# Puerto SMTP
# 25: Sin cifrado (no recomendado)
# 465: SSL/TLS
# 587: STARTTLS (recomendado)
# 2525: Alternativo para algunos proveedores
MAIL_PORT=2525

# Credenciales del servidor SMTP
MAIL_USERNAME=null
MAIL_PASSWORD=null

# Dirección de correo remitente por defecto
# Debe ser válida y autorizada por el servidor SMTP
# Desarrollo: usar dominio .test o .local
MAIL_FROM_ADDRESS="noreply@lara12adminlte.test"

# Nombre del remitente por defecto
MAIL_FROM_NAME="${APP_NAME}"

# ========================================
# CONFIGURACIÓN DE AWS (Amazon Web Services)
# ========================================

# Credenciales de acceso a AWS
# Necesarias para S3, SES, SNS, etc.
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# Región de AWS por defecto
# Ejemplos: us-east-1, eu-west-1, ap-southeast-1
AWS_DEFAULT_REGION=us-east-1

# Nombre del bucket S3 (si se usa para archivos)
AWS_BUCKET=

# Usar estilo de ruta para endpoints S3
# false: style.s3.amazonaws.com/bucket
# true: s3.amazonaws.com/bucket/style
AWS_USE_PATH_STYLE_ENDPOINT=false

# ========================================
# CONFIGURACIÓN DE VITE (HERRAMIENTAS FRONTEND)
# ========================================

# Variables disponibles en el frontend JavaScript
# Accesible como import.meta.env.VITE_APP_NAME
VITE_APP_NAME="${APP_NAME}"

# Agregar aquí más variables VITE según necesidades:
# VITE_API_URL=
# VITE_GOOGLE_MAPS_API_KEY=
# VITE_STRIPE_PUBLIC_KEY=

# ========================================
# VARIABLES PERSONALIZADAS DEL PROYECTO
# ========================================

# Agregar aquí variables específicas de Lara12AdminLTE:
# ADMIN_EMAIL=
# COMPANY_NAME=
# SUPPORT_PHONE=
# SOCIAL_MEDIA_LINKS=

# ========================================
# NOTAS IMPORTANTES PARA LARAGON
# ========================================
# 
# 1. CONFIGURACIÓN LARAGON:
#    - MySQL viene preconfigurado en puerto 3306
#    - Apache en puerto 80, SSL en 443
#    - Dominio .test se genera automáticamente
#    - phpMyAdmin disponible desde el menú
# 
# 2. CREACIÓN DE BASE DE DATOS:
#    - Acceder a phpMyAdmin desde Laragon
#    - Crear base de datos: lara12adminlte
#    - Ejecutar: php artisan migrate
# 
# 3. HOSTS VIRTUALES:
#    - Laragon gestiona automáticamente los dominios .test
#    - No necesitas configurar hosts manualmente
# 
# 4. SSL/HTTPS:
#    - Para habilitar HTTPS: Clic derecho en Laragon > SSL > miapp.test
#    - Cambiar APP_URL a https://Lara12AdminLTE.test
# 
# 5. SEGURIDAD:
#    - Nunca versionar el archivo .env real en Git
#    - Usar contraseñas fuertes en producción
#    - Cambiar APP_KEY en cada instalación
#    - APP_DEBUG=false en producción
# 
# 6. RENDIMIENTO:
#    - Usar redis/memcached en producción
#    - CACHE_STORE=redis para mejor rendimiento
#    - SESSION_DRIVER=redis para múltiples servidores
# 
# 7. MANTENIMIENTO:
#    - Documentar cambios en este archivo
#    - Actualizar versión cuando se modifique
#    - Notificar al equipo sobre nuevas variables
# 
# 8. BACKUP:
#    - Hacer backup del .env antes de cambios importantes
#    - Tener .env de respaldo para rollback rápido
#
# ========================================
# FIN DEL ARCHIVO DE CONFIGURACIÓN
# ========================================